{
	"Function Declaration": {
		"prefix": [ "fn" ],
		"body": [
			"fn<${1:retType}> ${2:name}(${0})..."
		]
	},
	"Function Definition": {
		"prefix": [ "fn" ],
		"body": [
			"fn<${1:retType}> ${2:name}(${0}):",
			"\tpass"
		]
	},
	"Variable Declaration": {
		"prefix": [ "var" ],
		"body": [
			"var<${1:type}> ${0:name}"
		]
	},
	"Variable Definition": {
		"prefix": [ "var" ],
		"body": [
			"var ${1:name} = ${0}"
		]
	},
	"Constant Declaration": {
		"prefix": [ "const" ],
		"body": [
			"const<${1:type}> ${0:name}"
		]
	},
	"Constant Definition": {
		"prefix": [ "const" ],
		"body": [
			"const ${1:name} = ${0}"
		]
	},
	"If Statement": {
		"prefix": [ "if" ],
		"body": [
			"if ${1:condition}:",
			"\t${0:pass}"
		]
	},
	"Elif Statement": {
		"prefix": [ "elif" ],
		"body": [
			"elif ${1:condition}:",
			"\t${0:pass}"
		]
	},
	"Else Statement": {
		"prefix": [ "else" ],
		"body": [
			"else:",
			"\t${0:pass}"
		]
	},
	"If-Else Statement": {
		"prefix": [ "ifelse" ],
		"body": [
			"if ${1:condition}:",
			"\t${2:pass}",
			"else:",
			"\t${0:pass}"
		]
	},
	"If-Elif-Else Statement": {
		"prefix": [ "ifelifelse" ],
		"body": [
			"if ${1:condition}:",
			"\t${2:pass}",
			"elif ${3:condition}:",
			"\t${4:pass}",
			"else:",
			"\t${0:pass}"
		]
	},
	"While Loop": {
		"prefix": [ "while" ],
		"body": [
			"while ${1:condition}:",
			"\t${0:pass}"
		]
	},
	"Do-While Loop": {
		"prefix": [ "do" ],
		"body": [
			"do:",
			"\t${1:pass}",
			"while ${0:condition}"
		]
	},
	"Lambda": {
		"prefix": [ "lambda" ],
		"body": [
			"lambda<${1:retType}>(${2}): ${0:pass};"
		]
	}
}