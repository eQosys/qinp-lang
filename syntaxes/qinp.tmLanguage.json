{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "QINP",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#builtins"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#literals"
		},
		{
			"include": "#identifiers"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.qinp",
					"match": "\\b(break|continue|defer|do|elif|else|if|pass|return|while|linux|windows)\\b"
				},
				{
					"name": "keyword.other.qinp",
					"match": "\\b(__file__|__line__|__mangled__|__pretty__|alias|asm|assembly|blueprint|const|define|enum|extern|fn|import|lambda|nodiscard|pack|space|static|union|var|null)\\b"
				}
			]
		},
		"builtins": {
				"name": "storage.type.qinp",
				"match": "\\b(bool|i8|i16|i32|i64|u8|u16|u32|u64|void)\\b"
		},
		"strings": {
			"name": "string.quoted.double.qinp",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.qinp",
					"match": "\\\\."
				}
			]
		},
		"comments": {
			"name": "comment.line.qinp",
			"begin": "\\\\\\\\",
			"end": "$\\n",
			"patterns": [
				{
					"name": "markup.bold.qinp",
					"match": "\\b(TODO|FIXME|NOTE|HACK)\\b"
				}
			]
		},
		"literals": {
			"patterns": [
				{
					"name": "constant.numeric.qinp",
					"match": "\\b(0[xX][0-9a-fA-F]+|0[bB][01]+|[0-9]+)\\b"
				},
				{
					"name": "constant.language.qinp",
					"match": "\\b(true|false)\\b"
				},
				{
					"name": "string.quoted.single.qinp",
					"begin": "'",
					"end": "'",
					"patterns": [
						{
							"name": "constant.character.escape.qinp",
							"match": "\\\\."
						}
					]
				}
			]
		},
		"identifiers": {
			"patterns": [
				{
					"name": "variable.other.qinp",
					"match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b"
				}
			]
		}
	},
	"scopeName": "source.qnp"
}